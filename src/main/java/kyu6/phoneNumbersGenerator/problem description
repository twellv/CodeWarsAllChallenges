(01) Phone Numbers Generator Challenge.

Description:
Write a function that accepts an array of 10 integers (between 0 and 9), that returns a string of those numbers in the form of a phone number.
Example:
    Kata.createPhoneNumber(new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}) // => returns "(123) 456-7890"

The returned format must be correct in order to complete this challenge.
Don't forget the space after the closing parentheses!

* My own code:

    public class PhoneNumberGenerator {

        public static String createPhoneNumber(int[] numbers){

            return criar(numbers);

        }

        public static String criar( int[] numbers ){
            String formattedNumber="";

            formattedNumber = ("(");
            for (int i = 0; i < 3; i++) {
                formattedNumber += Integer.toString(numbers[i]);
            }
            formattedNumber += (") ");

            for (int i = 3; i < 6; i++) {
                formattedNumber += Integer.toString(numbers[i]);
            }
            formattedNumber +=("-");

            for (int i = 6; i < 10; i++) {
                formattedNumber += Integer.toString(numbers[i]);
            }
            return formattedNumber;
        }
    }



OBS: PODERIA TER UTILIZADO ESSES IMPORTS MAS NÃƒO SEI USAR.

    import java.text.DecimalFormat;
    import java.text.MessageFormat;

VERIFICAR: O que faz o %d% ?
public class Kata {
  public static String createPhoneNumber(int[] numbers) {
    return String.format("(%d%d%d) %d%d%d-%d%d%d%d",numbers[0],numbers[1],numbers[2],numbers[3],numbers[4],numbers[5],numbers[6],numbers[7],numbers[8],numbers[9]);
  }
}
